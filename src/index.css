@tailwind base;
@tailwind components;
@tailwind utilities;

html {
  font-family: monospace;
  --nav-width: 0;
  --nav-height: 80px;
  --main-color: #1e1b4b;
  --main-dark-color: white;
  --main-bg-dark-color: #1e1b4b;
  --main-bg-color: white;
  --hover-bg-color: #a5b4fc;
  --hover-bg-dark-color: #4338ca;
  --neutral-color: #e5e7eb;
  --link-color: #a21caf;
  --dark-link-color: #f0abfc;
  --dark-section-color: #312e81;
  --section-color: #e0e7ff;
  --scroll-to-top-position: calc(var(--nav-width) + 2vw);
  margin: 0;
  padding: 0;
  min-height: 100%;
  background: linear-gradient(
    70deg,
    var(--main-bg-color),
    var(--hover-bg-color)
  );

  background-attachment: fixed;

  transition: background-color ease-in-out 150ms;
  color: var(--main-color);

  position: relative;
  font-size: 8px;
  @media (min-width: 640px) {
    font-size: 10px;
  }
  @media (min-width: 768px) {
    font-size: 12px;
  }
  @media (min-width: 1024px) {
    font-size: 16px;
    --nav-height: 0;
    --nav-width: 250px;
  }
  @media (min-width: 1280px) {
    font-size: 14px;
  }
  @media (min-width: 1536px) {
    font-size: 16px;
  }
}
body {
  height: 100%;
}
#root {
  padding-top: var(--nav-height);
  padding-left: var(--nav-width);
}
html.dark {
  background: linear-gradient(70deg, var(--main-bg-dark-color), #4338ca);
  background-attachment: fixed;
  color-scheme: dark;
  color: var(--main-dark-color);
}
.gradient-bg {
  background: linear-gradient(
    60deg,
    #f79533,
    #f37055,
    #ef4e7b,
    #a166ab,
    #5073b8,
    #1098ad,
    #07b39b,
    #6fba82
  );
  animation: animatedgradient 3s ease alternate infinite;
  background-size: 300% 300%;
}
@keyframes animatedgradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}
.fade-effect {
  overflow: hidden;
  transform: translateY(30px);
  scale: 0.8;
  animation: fadeInText 1s 0ms forwards;
  opacity: 0;
}
.fade-effect-top {
  overflow: hidden;
  scale: 0.8;
  animation: fadeInTextTop 1s forwards;
  opacity: 0;
}
.fade-time-250 {
  animation-delay: 250ms;
}
.fade-time-500 {
  animation-delay: 500ms;
}

@keyframes fadeInText {
  to {
    opacity: 1;
    scale: 1;
  }
}
@keyframes fadeInTextTop {
  from {
    transform: translateY(-10px);
  }
  to {
    transform: translateY(0);
    opacity: 1;
    scale: 1;
  }
}
.fade-in-section {
  opacity: 0;
  transform: translateY(10vh);
  visibility: hidden;
  scale: 0.8;
  transition: opacity 0.6s ease-out, transform 1.2s ease-out,
    scale 1.2s ease-out;
  will-change: opacity, visibility, transform;
}
.fade-in-section.is-visible {
  scale: 1;
  opacity: 1;
  transform: none;
  visibility: visible;
}
.text-typing {
  border-right-width: 4px;
  border-right-style: solid;
  animation: cursor 1s infinite step-end, typing 7s infinite steps(22);
  white-space: nowrap;
  overflow: hidden;
}
.dark .text-typing {
  animation: cursorDark 1s infinite step-end, typing 7s infinite steps(22);
}
@keyframes cursor {
  0%,
  100% {
    border-color: var(--main-color);
  }
  50% {
    border-color: transparent;
  }
}
@keyframes cursorDark {
  0%,
  100% {
    border-color: var(--main-dark-color);
  }
  50% {
    border-color: transparent;
  }
}
@keyframes typing {
  0% {
    width: 0ch;
  }
  40% {
    width: 22.1ch;
  }
  80% {
    width: 22.1ch;
  }
  90% {
    width: 0ch;
  }
  100% {
    width: 0ch;
  }
}
@media (min-width: 1024px) {
  .parallax-effect {
    --f: 0.05; /* the parallax factor (the smaller the better) */
    --r: 20px; /* radius */
    --_f: calc(100% * var(--f) / (1 + var(--f)));
    --_a: calc(-90deg * var(--f));
    aspect-ratio: calc(1 + var(--f));
    object-fit: cover;
    clip-path: inset(0 var(--_f) 0 0 round var(--r));
    transform: perspective(400px) var(--_t, rotateY(var(--_a)));
    transition: 0.5s;
    cursor: pointer;
  }
  .parallax-effect:hover {
    clip-path: inset(0 0 0 var(--_f) round var(--r));
    --_t: translateX(calc(-1 * var(--_f))) rotateY(calc(-1 * var(--_a)));
  }
}

.left-section .inner-content {
  position: absolute;
  top: 50%;
  transform: translateY(-50%) translateX(-50%);
  left: 50%;
}
.background {
  position: absolute;
  top: 0;
  left: var(--nav-width);
  width: calc(100% - var(--nav-width));
  height: 100%;
}
@media (max-width: 768px) {
  .background .ground {
    height: 0vh;
  }
}
.container {
  position: relative;
  margin: 0 auto;
  width: 85%;
  height: 100vh;

  display: flex;
  flex-direction: row;
  justify-content: space-around;
  text-align: center;
}
@media (max-width: 768px) {
  .container {
    flex-direction: column;
    padding-bottom: 0vh;
  }
}

.left-section,
.right-section {
  position: relative;
}

.left-section {
  width: 50%;
}
@media (max-width: 768px) {
  .left-section {
    width: 100%;
    height: 40%;
    position: absolute;
    top: 0;
  }
}
@media (max-width: 770px) {
  .left-section .inner-content {
    position: relative;
    padding: 1rem 0;
  }
}

.heading {
  text-align: center;
  font-size: 9em;
  line-height: 1.3em;
  margin: 2rem 0 0.5rem 0;
  padding: 0;
  text-shadow: 0 0 1rem #fefefe;
}
@media (max-width: 768px) {
  .heading {
    font-size: 7em;
    line-height: 1.15;
    margin: 0;
  }
}

.subheading {
  text-align: center;
  max-width: 480px;
  font-size: 1.5em;
  line-height: 1.15em;
  padding: 0 1rem;
  margin: 0 auto;
}
@media (max-width: 768px) {
  .subheading {
    font-size: 1.3em;
    line-height: 1.15;
    max-width: 100%;
  }
}

.right-section {
  width: 50%;
}
@media (max-width: 768px) {
  .right-section {
    width: 100%;
    height: 60%;
    position: absolute;
    bottom: 0;
  }
}

.svgimg {
  position: absolute;
  bottom: 0;
  padding-top: 10vh;
  padding-left: 1vh;
  max-width: 100%;
  max-height: 100%;
}
@media (max-width: 768px) {
  .svgimg {
    padding: 0;
  }
}
.svgimg .bench-legs {
  fill: #0c0e10;
}
.svgimg .top-bench,
.svgimg .bottom-bench {
  stroke: #0c0e10;
  stroke-width: 1px;
  fill: #5b3e2b;
}
.svgimg .bottom-bench path:nth-child(1) {
  fill: #432d20;
}
.svgimg .lamp-details {
  fill: #202425;
}
.svgimg .lamp-accent {
  fill: #2c3133;
}
.svgimg .lamp-bottom {
  fill: linear-gradient(#202425, #0c0e10);
}
.svgimg .lamp-light {
  fill: #efefef;
}

@keyframes glow {
  0% {
    text-shadow: 0 0 1rem #fefefe;
  }
  50% {
    text-shadow: 0 0 1.85rem #ededed;
  }
  100% {
    text-shadow: 0 0 1rem #fefefe;
  }
}
.stars {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100%;
  transform: rotate(-80deg) translateX(20vh);
}
.star {
  --star-color: var(--primary-color);
  --star-tail-length: 6em;
  --star-tail-height: 2px;
  --star-width: calc(var(--star-tail-length) / 6);
  --fall-duration: 9s;
  --tail-fade-duration: var(--fall-duration);
  position: absolute;
  top: var(--top-offset);
  left: 0;
  width: var(--star-tail-length);
  height: var(--star-tail-height);
  color: var(--star-color);
  background: linear-gradient(45deg, currentColor, transparent);
  border-radius: 50%;
  filter: drop-shadow(0 0 6px currentColor);
  transform: translate3d(104em, 0, 0);
  animation: fall var(--fall-duration) var(--fall-delay) linear infinite,
    tail-fade var(--tail-fade-duration) var(--fall-delay) ease-out infinite;
}
@media screen and (max-width: 750px) {
  .star {
    animation: fall var(--fall-duration) var(--fall-delay) linear infinite;
  }
}
.star:nth-child(1) {
  --star-tail-length: 6.24em;
  --top-offset: 12.12vh;
  --fall-duration: 9.743s;
  --fall-delay: 2.939s;
}
.star:nth-child(2) {
  --star-tail-length: 7.15em;
  --top-offset: 32.48vh;
  --fall-duration: 6.228s;
  --fall-delay: 0.276s;
}
.star:nth-child(3) {
  --star-tail-length: 7.26em;
  --top-offset: 13.65vh;
  --fall-duration: 10.102s;
  --fall-delay: 3.989s;
}
.star:nth-child(4) {
  --star-tail-length: 6.69em;
  --top-offset: 87.23vh;
  --fall-duration: 6.507s;
  --fall-delay: 7.137s;
}
.star:nth-child(5) {
  --star-tail-length: 6.49em;
  --top-offset: 48.98vh;
  --fall-duration: 11.076s;
  --fall-delay: 8.79s;
}
.star::before,
.star::after {
  position: absolute;
  content: '';
  top: 0;
  left: calc(var(--star-width) / -2);
  width: var(--star-width);
  height: 100%;
  background: linear-gradient(45deg, transparent, currentColor, transparent);
  border-radius: inherit;
  animation: blink 2s linear infinite;
}
.star::before {
  transform: rotate(45deg);
}
.star::after {
  transform: rotate(-45deg);
}

@keyframes fall {
  to {
    transform: translate3d(-30em, 0, 0);
  }
}
@keyframes tail-fade {
  0%,
  50% {
    width: var(--star-tail-length);
    opacity: 1;
  }
  70%,
  80% {
    width: 0;
    opacity: 0.4;
  }
  100% {
    width: 0;
    opacity: 0;
  }
}
@keyframes blink {
  50% {
    opacity: 0.6;
  }
}
