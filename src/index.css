@tailwind base;
@tailwind components;
@tailwind utilities;

html {
  font-family: monospace;
  --nav-width: 250px;
  --main-color: #1e1b4b;
  --main-dark-color: white;
  --main-bg-dark-color: #1e1b4b;
  --main-bg-color: white;
  --hover-bg-color: #a5b4fc;
  --hover-bg-dark-color: #4338ca;
  --neutral-color: #e5e7eb;
  --link-color: #a21caf;
  --dark-link-color: #f0abfc;
  --dark-section-color: #312e81;
  --section-color: #e0e7ff;
  margin: 0;
  padding: 0;
  min-height: 100%;
  background: linear-gradient(
    70deg,
    var(--main-bg-color),
    var(--hover-bg-color)
  );

  background-attachment: fixed;

  transition: background-color ease-in-out 150ms;
  color: var(--main-color);

  position: relative;
  font-size: 8px;
  @media (min-width: 640px) {
    font-size: 10px;
  }
  @media (min-width: 768px) {
    font-size: 12px;
  }
  @media (min-width: 1024px) {
    font-size: 16px;
  }
  @media (min-width: 1280px) {
    font-size: 14px;
  }
  @media (min-width: 1536px) {
    font-size: 16px;
  }
}
body {
  height: 100%;
}
#root {
  padding-left: var(--nav-width);
}
html.dark {
  background: linear-gradient(70deg, var(--main-bg-dark-color), #4338ca);
  background-attachment: fixed;
  color-scheme: dark;
  color: var(--main-dark-color);
}
.gradient-bg {
  background: linear-gradient(
    60deg,
    #f79533,
    #f37055,
    #ef4e7b,
    #a166ab,
    #5073b8,
    #1098ad,
    #07b39b,
    #6fba82
  );
  animation: animatedgradient 3s ease alternate infinite;
  background-size: 300% 300%;
}
@keyframes animatedgradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}
.fade-effect {
  overflow: hidden;
  transform: translateY(30px);
  scale: 0.8;
  animation: fadeInText 1s 0ms forwards;
  opacity: 0;
}
.fade-effect-top {
  overflow: hidden;
  scale: 0.8;
  animation: fadeInTextTop 1s forwards;
  opacity: 0;
}
.fade-time-250 {
  animation-delay: 250ms;
}
.fade-time-500 {
  animation-delay: 500ms;
}

@keyframes fadeInText {
    to {
    opacity: 1;
    scale: 1;
  }
}
@keyframes fadeInTextTop {
  from {
    transform: translateY(-10px);
  }
  to {
    transform: translateY(0);
    opacity: 1;
    scale: 1;
  }
}
.fade-in-section {
  opacity: 0;
  transform: translateY(10vh);
  visibility: hidden;
  scale: 0.8;
  transition: opacity 0.6s ease-out, transform 1.2s ease-out,
    scale 1.2s ease-out;
  will-change: opacity, visibility, transform;
}
.fade-in-section.is-visible {
  scale: 1;
  opacity: 1;
  transform: none;
  visibility: visible;
}
.text-typing {
  border-right-width: 4px;
  border-right-style: solid;
  animation: cursor 1s infinite step-end, typing 7s infinite steps(22);
  white-space: nowrap;
  overflow: hidden;
}
.dark .text-typing {
  animation: cursorDark 1s infinite step-end, typing 7s infinite steps(22);
}
@keyframes cursor {
  0%,
  100% {
    border-color: var(--main-color);
  }
  50% {
    border-color: transparent;
  }
}
@keyframes cursorDark {
  0%,
  100% {
    border-color: var(--main-dark-color);
  }
  50% {
    border-color: transparent;
  }
}
@keyframes typing {
  0% {
    width: 0ch;
  }
  40% {
    width: 22.1ch;
  }
  80% {
    width: 22.1ch;
  }
  90% {
    width: 0ch;
  }
  100% {
    width: 0ch;
  }
}
.slice-effect {
  --_g: 10% /50% 50% no-repeat linear-gradient(#000 0 0);
  --m: left var(--_i, 0%) top var(--_g), bottom var(--_i, 0%) left var(--_g),
    top var(--_i, 0%) right var(--_g), right var(--_i, 0%) bottom var(--_g);
  -webkit-mask: var(--m);
  mask: var(--m);
  transition: 0.5s linear;
  cursor: pointer;
}
.slice-effect:hover {
  --_i: -50%;
}
.shine-effect {
  --a: 8deg;
  transform: perspective(600px)
    rotate3d(var(--r, 1, -1), 0, calc(var(--i, 1) * var(--a)));
  -webkit-mask: linear-gradient(135deg, #000c 20%, #000, #000c 50%) 100% 100%/250%
    250%;
  transition: 0.4s;
  cursor: pointer;
}
.shine-effect:hover {
  --i: -1;
  -webkit-mask-position: 0 0;
}
.parallax-effect {
  --f: 0.05; /* the parallax factor (the smaller the better) */
  --r: 20px; /* radius */

  --_f: calc(100% * var(--f) / (1 + var(--f)));
  --_a: calc(-90deg * var(--f));
  aspect-ratio: calc(1 + var(--f));
  object-fit: cover;
  clip-path: inset(0 var(--_f) 0 0 round var(--r));
  transform: perspective(400px) var(--_t, rotateY(var(--_a)));
  transition: 0.5s;
  cursor: pointer;
}
.parallax-effect:hover {
  clip-path: inset(0 0 0 var(--_f) round var(--r));
  --_t: translateX(calc(-1 * var(--_f))) rotateY(calc(-1 * var(--_a)));
}
